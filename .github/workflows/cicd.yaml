name: Build and Deployment
on: 
    push:
        branches:
            - 'main'
            - 'feature*'
            - 'feature/*'
        # branches-ignore:
        #     - 'release*'
        #     - 'release/*'
jobs:
    test:
        name: Unit Test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: setup JDK
              uses: actions/setup-java@v3
              with:
                distribution: 'temurin' # See 'Supported distributions' for available options
                java-version: '11'
            - name: Maven Package
              run: mvn -B clean package -DskipTests
            - name: Maven Verify
              run: mvn -B clean verify
    sonar:
        name: Test - SonarCloud Scan
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Set up JDK 11
              uses: actions/setup-java@v3
              with:
                distribution: 'temurin'
                java-version: 11
            - name: SonarCloud Scan
              run: mvn -B clean verify -Psonar -Dsonar.token=${{ secrets.SONAR_TOKEN }}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    artifact:
        name: Publish - GitHub Packages
        runs-on: ubuntu-latest
        needs: [test, sonar]
        steps:
            - uses: actions/checkout@v3
            - name: Set up JDK 11
              uses: actions/setup-java@v3
              with:
                distribution: 'temurin'
                java-version: 11
            - name: Bump pom version
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
                python readpom.py
            - name: Publish artifact on GitHub Packages
              run: mvn -B clean deploy -DskipTests
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    docker:
        name: Publish - Docker Hub
        runs-on: ubuntu-latest
        needs: [test, sonar]
        env:
          REPO: ${{ secrets.DOCKER_REPO }}
        steps:
        - uses: actions/checkout@v1
        - name: Login to Docker Hub
          run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}
        - name: Build Docker image
          run: docker build -t $REPO:latest -t $REPO:${GITHUB_SHA::8} .
        - name: Publish Docker image
          run: docker push $REPO
